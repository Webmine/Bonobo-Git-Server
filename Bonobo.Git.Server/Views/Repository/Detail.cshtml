@model Bonobo.Git.Server.Models.RepositoryDetailModel
@{
    Layout = "~/Views/Repository/_RepositoryLayout.cshtml";
    ViewBag.Title = Resources.Repository_Detail_Title;

    string serverAddress = System.Configuration.ConfigurationManager.AppSettings["GitServerPath"]
                        ?? string.Format("{0}://{1}{2}{3}/", 
                                            Request.Url.Scheme, 
                                            Request.Url.Host, 
                                            (Request.Url.IsDefaultPort ? "" : (":" + Request.Url.Port)),
                                            Request.ApplicationPath == "/" ? "" : Request.ApplicationPath
                                        );
}
@if (Model != null)
{
    <div class="pure-form pure-form-aligned detail">
        <fieldset>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Name)
                <span>@Model.Name</span>
                @switch (Model.Status)
                {
                    case RepositoryDetailStatus.Valid:
                        break;
                    case RepositoryDetailStatus.Missing:
                        <span class="status">(Missing)</span>
                        break;
                    case RepositoryDetailStatus.Unknown:
                    default:
                    <span class="status">(Status Unknown)</span>
                        break;
                }
            </div>
            <div class="pure-control-group">
                <label>@Resources.Repository_Detail_Location</label>
                <span>@String.Concat(serverAddress, Model.Name, ".git")</span>
            </div>

            @if (User.Identity.IsAuthenticated){
                <div class="pure-control-group">
                    <label>
                        @Resources.Repository_Detail_Location_Personal
                    </label>
                    <span>@String.Concat(serverAddress.Replace("://", "://" + User.Identity.Name + "@"), Model.Name, ".git")</span>
                </div>
            }

            <div class="pure-control-group">
                @Html.LabelFor(m => m.Group)
                <span>@Model.Group</span>
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Description)
                <span>@Model.Description</span>
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.AllowAnonymous)
                @if (Model.AllowAnonymous)
                {
                    <span>@Resources.Repository_Detail_Yes</span>
                }
                else
                {
                    <span>@Resources.Repository_Detail_No</span>
                }
            </div>
            @if (AppSettings.IsPushAuditEnabled) {
            <div class="pure-control-group">
                @Html.LabelFor(m => m.AuditPushUser)
                @if (Model.AuditPushUser)
                {
                    <span>@Resources.Repository_Detail_Yes</span>
                }
                else
                {
                    <span>@Resources.Repository_Detail_No</span>
                }
            </div>
            }
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Users)
                @for (int i = 0; i < Model.Users.Length; i++)
                {
                    <span>@Html.ActionLink(@Model.Users[i] + ((i + 1) != Model.Users.Length ? "," : string.Empty), "Detail", "Account", new { id = UsernameUrl.Encode(@Model.Users[i]) }, null)</span>
                }
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Administrators)
                @for (int i = 0; i < Model.Administrators.Length; i++)
                {
                    <span>@Html.ActionLink(@Model.Administrators[i] + ((i + 1) != Model.Users.Length ? "," : string.Empty), "Detail", "Account", new { id = UsernameUrl.Encode(@Model.Administrators[i]) }, null)</span>

                }
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Teams)
                @for (int i = 0; i < Model.Teams.Length; i++)
                {
                    <span>@Html.ActionLink(@Model.Teams[i] + ((i + 1) != Model.Users.Length ? "," : string.Empty), "Detail", "Team", new { id = @Model.Teams[i] }, null)</span>
                }
            </div>
            <div class="pure-controls">
                <a class="pure-button" href="@Url.Action("Index")"><i class="fa fa-long-arrow-left"></i> @Resources.Repository_Detail_Back</a>
                @if (Model.IsCurrentUserAdministrator)
                {
                    <a class="pure-button" href="@Url.Action("Edit", new { id = Model.Name })"><i class="fa fa-pencil-square-o"></i> @Resources.Repository_Detail_Edit</a>
                    <a class="pure-button" href="@Url.Action("Delete", new { id = Model.Name })"><i class="fa fa-trash-o"></i> @Resources.Repository_Detail_Delete</a>
                }
            </div>
        </fieldset>
    </div>
}
